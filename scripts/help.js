#!/usr/bin/env node
/**
 * Help script displaying available commands
 */

console.log("Available commands:\n");

console.log("- Build & Run:");
console.log("  npm run build         Build TypeScript code");
console.log("  npm run setup         Initial server setup");
console.log("  npm start            Start the server");
console.log("  npm run dev          Start in development mode");
console.log("");

console.log("- Testing:");
console.log("  npm test              Run all tests");
console.log("  npm run test:security Run security tests");
console.log("  npm run test:server   Run server tests");
console.log("  npm run test:challenge Run challenge tests");
console.log("  npm run test:auth     Run authentication tests");
console.log("  npm run test:watch    Run tests in watch mode");
console.log("  npm run test:coverage Generate test coverage report");
console.log("  npm run test:only \"<pattern>\" Run tests matching pattern");
console.log("");

console.log("- Docker:");
console.log("  npm run docker:build   Build Docker image");
console.log("  npm run docker:start   Start with Docker Compose");
console.log("  npm run docker:stop    Stop Docker containers");
console.log("  npm run docker:logs    View Docker logs");
console.log("");

console.log("- Client Management:");
console.log("  npm run generate-keys -- [name] [directory]  Generate client keys");
console.log("  npm run register-client -- [url] [name] [key_path]  Register a client");
console.log("  npm run list-clients                               List all clients");
console.log("  npm run revoke-client -- [client_id]               Revoke client access");
console.log("  npm run backup-clients                             Backup client database");
console.log("");

console.log("- Client Usage:");
console.log("  Use a compatible client library with the credentials generated by the registration process");
